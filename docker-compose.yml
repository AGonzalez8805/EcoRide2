services:
  # Service 'php' : Conteneur pour l'application PHP et le serveur web Apache.
  php:
    container_name: Ecoride_php 
    ports:
      - "80:80"  
    volumes:
      - ./:/var/www/html  
    build:
      context: .  # Construit depuis ce dossier
      dockerfile: Dockerfile  # Fichier Docker à utiliser
    networks:
      - app-network  # Réseau utilisé
    depends_on:
      - db
      - mongodb

  # Service 'db' : Conteneur pour la base de données MySQL.
  db:
    image: mysql:latest
    container_name: Ecoride_mysql 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_DATABASE: ${MYSQL_DATABASE}  
      MYSQL_USER: ${MYSQL_USER}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}  
    ports:
      - "3307:3306"  
    volumes:
      - Ecoride-data:/var/lib/mysql  # Sauvegarde des données
    networks:
      - app-network  # Réseau utilisé

  # Service 'phpmyadmin' : Conteneur pour l'interface web de gestion de base de données phpMyAdmin.
  phpmyadmin:
    image: phpmyadmin/phpmyadmin  
    container_name: Ecoride_phpmyadmin  
    environment:
      PMA_HOST: ${PMA_HOST}  
      PMA_USER: ${PMA_USER}  
      PMA_PASSWORD: ${PMA_PASSWORD}  
    ports:
      - "8000:80"  # Accès à phpMyAdmin sur le port 8000
    depends_on:
      - db  # Attend que MySQL soit prêt
    networks:
      - app-network  # Réseau utilisé

        # Service 'mongodb' : Conteneur pour la base de données MongoDb.
  mongodb:
    image: mongo:7.0
    container_name: Ecoride_mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - Ecoride-mongodb_data:/data/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    container_name: Ecoride_mongo_express
    ports:
      - "8090:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongodb
    networks:
      - app-network

# Réseau utilisé par tous les services
networks:
  app-network:
# Volume pour sauvegarder les données MySQL
volumes:
  Ecoride-data:
  Ecoride-mongodb_data:
